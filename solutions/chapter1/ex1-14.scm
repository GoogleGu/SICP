(define (change x)
    (iter-change x 5 0)
)

(define (iter-change remain coin-code)
    (cond ((= remain 0) 1)
          ((or (< coin-code 1) (< remian 0)) 0)
          (else (+ (iter-change (- remain (decode coin-code)) coin-code) 
                   (iter-change (- remain (decode (- coin-code 1))) (- coin-code 1))
                )
          ) 
    )
)


(define (decode coin-code)
    (cond ((= coin-code 5) 50)
          ((= coin-code 4) 25)
          ((= coin-code 3) 10)
          ((= coin-code 2) 5)
          ((= coin-code 1) 1)
          ((= coin-code 0) 0)
    )
)